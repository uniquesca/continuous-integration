name: Prepare release

on:
  workflow_call:
    secrets:
      UNIQUES_GITHUB_ACCESS_TOKEN:
        description: 'Access token for cloning Uniques private repositories from GitHub'
        required: true
      NODE_AUTH_TOKEN:
        description: 'Access token for authentication with the NPM registry'
        required: false
    inputs:
      version:
        description: 'Version being prepared, has to be in x.y.z format'
        required: true
        type: string
      generate_changelog:
        description: 'Whether changelog should be generated for the new version'
        required: false
        default: true
        type: boolean
      changelog_path:
        description: 'Path to the changelog file. Ignored if `generate-changelog` intput is not set to `true`'
        required: false
        default: 'CHANGELOG.md'
        type: string
      update_db:
        description: 'Whether DB dump should be updated'
        required: false
        default: false
        type: boolean
      db_dump_path:
        description: 'Path to the DB dump. Ignored if `update_db` input is not set to `true`'
        required: false
        type: string
      migration_command:
        description: 'DB migration command to run. Ignored if `update_db` input is not set to `true`'
        required: false
        default: './vendor/bin/phinx migrate'
        type: string
      build_command:
        description: 'Allows to perform a build as part of release preparation'
        required: false
        type: string
        default: ''
      build_path:
        description: 'Allows to specify path to the build files for committing them'
        required: false
        type: string
        default: ''

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Update package version
        run: |
          if [ -f "package.json" ]; then
            npm pkg set version=${{ inputs.version }}
          fi

      - name: Update changelog file
        if: ${{ inputs.generate_changelog == true }}
        uses: uniquesca/continuous-integration/update-changelog@main
        with:
          changelog_path: ${{ inputs.changelog_path }}
          target_version: ${{ inputs.version }}

      - name: Cache Composer dependencies
        id: cache-composer
        uses: actions/cache@v3
        with:
          path: |
            vendor
          key: ${{ runner.os }}-composer-ci-prepare-release-${{ hashFiles('composer.json,composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-ci-prepare-release-

      - name: Install Composer dependencies
        if: ${{ inputs.update_db == true }}
        run: |
          php composer.phar config --auth github-oauth.github.com ${{ secrets.UNIQUES_GITHUB_ACCESS_TOKEN }}
          php composer.phar install

      - name: Init database
        if: ${{ inputs.update_db == true }}
        uses: uniquesca/continuous-integration/migrate-db-dump@2
        with:
          db_dump_file: ${{ inputs.db_dump_path }}
          migration_command: ${{ inputs.migration_command }}

      - name: Debug DB dump
        if: ${{ inputs.update_db == true }}
        run: cat ${{ inputs.db_dump_path }}

      - name: Get NPM cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: Cache NPM dependencies
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-ci-prepare-release-${{ hashFiles('package.json,package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-ci-prepare-release-

      - name: Prepare .npmrc file
        run: |
          if [ ! -f ".npmrc" ]; then
            echo "@uniquesca:registry=https://npm.pkg.github.com" >> .npmrc
            echo "//npm.pkg.github.com/:_authToken=${{ secrets.UNIQUES_GITHUB_ACCESS_TOKEN }}" >> .npmrc
            echo "always_auth=true" >> .npmrc
          fi

      - name: Update package version
        run: |
          if [ -f "package.json" ]; then
            npm pkg set version=${{ inputs.version }}
          fi

      - name: Install NPM dependencies
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        run: |
          if [ -f "package.json" ]; then
            npm install
          fi

      - name: Run Build
        run: ${{ inputs.build_command }}

      - name: Add build files to Git index
        if: ${{ inputs.build_path != '' }}
        run: git add ${{ inputs.build_path }}

      - name: Commit changes
        run: |
          git config --local user.email "gha@uniques.ca"
          git config --local user.name "GitHub Actions"

          if [ -f "package.json" ]; then
            git add package.json
          fi
          
          if ${{ inputs.update_db == true }}; then
            git add ${{ inputs.db_dump_path }}
          fi
          
          if ${{ inputs.generate_changelog == true }}; then
            git add CHANGELOG.md
          fi
          
          git clean -fd
          
          git diff --staged --quiet || (git commit -a -m "Automatic commit for the new release: #${GITHUB_SHA}" && git push)
